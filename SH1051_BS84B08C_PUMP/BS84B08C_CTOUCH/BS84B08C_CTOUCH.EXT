;;;;;///*********************************************************************************************************//**
;;;;;// * @file    BS84B08C_CTOUCH.ext
;;;;;// * @version V1.00
;;;;;// * @date    11/13/2020
;;;;;// * @brief   The header file of the BS84B08C_CTOUCH library.
;;;;;// *************************************************************************************************************
;;;;;// * @attention
;;;;;// * <h2><center>Copyright (C) Best Solution Inc. All rights reserved</center></h2>
;;;;;// ************************************************************************************************************/

;;;;;///* Includes ------------------------------------------------------------------------------------------------*/
;;;;;///* ==================================================================================================================================================*/

;;;;;///** @addtogroup BS84B08C_CTOUCH
;;;;;//  * @{
;;;;;//  */
;;;;;///* ---------------------------------------------------------------------------------------------------------*/
;;;;;///* Exported constants --------------------------------------------------------------------------------------*/
;;;;;///* ---------------------------------------------------------------------------------------------------------*/
;;;;;///** @defgroup CALCULATE_POSITION_exported_constants BS84B08C_CTOUCH exported constants
;;;;;//  * @{
;;;;;//  */
;;;;;///**
;;;;;//  * @}
;;;;;//  */
;;;;;///* ---------------------------------------------------------------------------------------------------------*/

;;;;;///* ---------------------------------------------------------------------------------------------------------*/
;;;;;///* Exported functions --------------------------------------------------------------------------------------*/
;;;;;///* ---------------------------------------------------------------------------------------------------------*/
;;;;;///** @defgroup  CALCULATE_POSITION_exported_functions BS84B08C_CTOUCH exported functions
;;;;;//  * @{
;;;;;//  */
;;;;;//
;;;;;///* ---------------------------------------------------------------------- */
;;;;;///* assembly exported function,register                                    */
;;;;;///* ---------------------------------------------------------------------- */

;;;;;///************************************************/
;;;;;///***** LIBRARY EXTERNAL REFERENCE FOR ASM CODE   */
;;;;;///*************************************************/
;;;;;/*-SUBROUTIN
ifndef BS84B08C_CTOUCH_DEF
    EXTERN  _BS84B08C_CTOUCH_INITIAL        :NEAR   ;;;;;//library initial
    EXTERN  _BS84B08C_CTOUCH                :NEAR   ;;;;;//scan all touch input
    EXTERN  _LIBRARY_RESET                  :NEAR   ;;;;;//library reset

ifndef MAIN_PROGRAM_DEF
    EXTERN  _BS84B08C_CTOUCH_HALT_PREPARE   :NEAR   ;;;;;//Sleep code, working time is WDT
    EXTERN  _BS84B08C_CTOUCH_HALT_WAKEUP    :NEAR   ;;;;;//Check any Halt Wakeup
    EXTERN  _BS84B08C_CTOUCH_RETURN_MAIN    :NEAR   ;;;;;//Ready to enter work mode
    EXTERN  _GET_KEY_BITMAP                 :NEAR   ;;;;;//get key status with level
    EXTERN  _GET_ENV_VALUE                  :NEAR   ;;;;;//get environment value
    EXTERN  _GET_REF_VALUE                  :NEAR   ;;;;;//get reference value
    EXTERN  _GET_RCC_VALUE                  :NEAR   ;;;;;//get internal CAP. value
    EXTERN  _GET_LIB_VER                    :NEAR   ;;;;;//get library version
endif
    EXTERN  _GET_KEY_AMOUNT                 :NEAR   ;;;;;//get key amount value
    EXTERN  _SET_KEY_THR                    :NEAR   ;;;;;//SET key threshold


    ;;;;;//-DATA DEFINE
    EXTERN  _GLOBE_VARIES                   :BYTE   ;;;;;//globe varies which define in HXT_REFERENCE.INC
    EXTERN  _KEY_REF                        :BYTE   ;;;;;//key Reference data RAM
    EXTERN  _KEY_STATUS                     :BYTE   ;;;;;//
    EXTERN  _TKS_TIME_BASE                  :BYTE   ;;;;;//
    EXTERN  _STANDBY_TIME                   :BYTE   ;;;;;//
    EXTERN  _STANDBY_TIME_CTRL              :BYTE   ;;;;;//
    EXTERN  _KEY_IO_SEL                     :BYTE   ;;;;;//
    EXTERN  _KEY_DATA                       :BYTE   ;;;;;//
    EXTERN  _KEY_THR                        :BYTE   ;;;;;//
    EXTERN  _BALANCE_CAP                    :BYTE   ;;;;;//

    ;;;;;//-FLAG DEFINE
    EXTERN  _SCAN_CYCLEF                    :BIT    ;;;;;//scan one cycle flag
    EXTERN  _ANY_KEY_PRESSF                 :BIT    ;;;;;//any key pressed flag
    EXTERN  _TKS_ACTIVEF                    :BIT    ;;;;;//library running
    EXTERN  _TKS_63MSF                      :BIT    ;;;;;//63ms time flag
    EXTERN  _TKS_250MSF                     :BIT    ;;;;;//250ms time flag
    EXTERN  _TKS_500MSF                     :BIT    ;;;;;//500ms time flag
    EXTERN  _FORCE_CALIBRATEF               :BIT    ;;;;;//force all key re-calibrate flag
endif
;;;;;//---------------------------------------------------------------
;;;;;*/
;;;;;//--------------------------------------------------------------------------

;;;;;/* ---------------------------------------------------------------------- */
;;;;;/* C exported function,register                                           */
;;;;;/* ---------------------------------------------------------------------- */
;;;;;/*
ifdef _INCLUDE_C_
;;;;;*/
;;;;;//---------------------------------------------------------------
;;;;;//*************************************************
;;;;;//***** LIBRARY EXTERNAL REFERENCE FOR C CODE     *
;;;;;//*************************************************
;;;;;//;-SUBROUTIN
#ifndef BS84B08C_CTOUCH_DEF
	extern  void    BS84B08C_CTOUCH_INITIAL();              ;;;;;//library initial
	extern  void    BS84B08C_CTOUCH();                      ;;;;;//scan all touch input
	extern  void    LIBRARY_RESET();                        ;;;;;//Library Reset
	
	#ifndef MAIN_PROGRAM_DEF
	extern  void    BS84B08C_CTOUCH_HALT_PREPARE();         ;;;;;//Sleep code, working time is WDT
	extern  void    BS84B08C_CTOUCH_HALT_WAKEUP();          ;;;;;//Check any Halt Wakeup
	extern  void    BS84B08C_CTOUCH_RETURN_MAIN();          ;;;;;//Ready to enter work mode
	extern  void    GET_KEY_BITMAP();                       ;;;;;//get key status with level
	extern  void    GET_ENV_VALUE();                        ;;;;;//get environment value
	extern  void    GET_REF_VALUE();                        ;;;;;//get reference value
	extern  void    GET_RCC_VALUE();                        ;;;;;//get internal CAP. value
	extern  void    GET_LIB_VER();                          ;;;;;//get library version
	#endif
	
	extern  void    GET_KEY_AMOUNT();                       ;;;;;//get key amount value
	extern  void    SET_KEY_THR();                          ;;;;;//set key threshold
	extern  void    KEY_WAKEUP();

//---------------------------------------------------------------
#ifdef  _CCV3_
    ;;;;;//-FLAG DEFINE IN BANK0 FOR C Compiler V3
    ;;;;;//-DATA DEFINE
    ;;;;;//-DEFINE BANK0 RAM
    extern  unsigned char   TKS_TIME_BASE;                  ;;;;;//
    extern  unsigned char   STANDBY_TIME;                   ;;;;;//
    extern  unsigned char   STANDBY_TIME_CTRL;              ;;;;;//
    extern  unsigned char   GLOBE_VARIES[];                 ;;;;;//globe varies which define in HXT_REFERENCE.INC
    extern  unsigned char   KEY_IO_SEL[];                   ;;;;;//
    extern  unsigned char   KEY_DATA[];                     ;;;;;//
    extern  unsigned char   KEY_THR[];                      ;;;;;//key threshold
    extern  unsigned char   BALANCE_CAP[];                  ;;;;;//RCC
    typedef struct {
            unsigned char b0 : 1;
            unsigned char b1 : 1;
            unsigned char b2 : 1;
            unsigned char b3 : 1;
            unsigned char b4 : 1;
            unsigned char b5 : 1;
            unsigned char b6 : 1;
            unsigned char b7 : 1;
    } _FLAG_bits;

    typedef union {
            _FLAG_bits bits;
            unsigned char   byte;
    }_TKS_FLAGA_type;

    extern _TKS_FLAGA_type      TKS_FLAGA;

    #define FORCE_CALIBRATEF    TKS_FLAGA.bits.b0
    #define TKS_ACTIVEF         TKS_FLAGA.bits.b1
    #define SCAN_CYCLEF         TKS_FLAGA.bits.b2
    #define ANY_KEY_PRESSF      TKS_FLAGA.bits.b3
    #define TKS_63MSF           TKS_FLAGA.bits.b4
    #define TKS_250MSF          TKS_FLAGA.bits.b5
    #define TKS_500MSF          TKS_FLAGA.bits.b6

    #else
    ;;;;;//-_CCV2_
    ;;;;;//-DATA DEFINE
    ;;;;;//-DEFINE BANK0 RAM
    #pragma rambank0
    extern  unsigned char   TKS_TIME_BASE;          ;;;;//
    extern  unsigned char   SAMPLE_TIMES;           ;;;;//
    extern  unsigned char   STANDBY_TIME;           ;;;;//
    extern  unsigned char   STANDBY_TIME_CTRL;      ;;;;//
    extern  unsigned char   GLOBE_VARIES[];         ;;;;//globe varies which define in HXT_REFERENCE.INC
    extern  unsigned char   KEY_IO_SEL[];           ;;;;//
    extern  unsigned char   KEY_DATA[];             ;;;;//
    extern  unsigned char   KEY_THR[];              ;;;;//
    ;;;;;//-FLAG DEFINE IN BANK0 FOR C Compiler V2
    extern  bit     SCAN_CYCLEF;                    ;;;;;//scan one cycle flag
    extern  bit     ANY_KEY_PRESSF;                 ;;;;;//any key pressed flag
    extern  bit     TKS_ACTIVEF;                    ;;;;;//library running
    extern  bit     TKS_63MSF;                      ;;;;;//63ms time flag
    extern  bit     TKS_250MSF;                     ;;;;;//250ms time flag
    extern  bit     TKS_500MSF;                     ;;;;;//500ms time flag
    extern  bit     FORCE_CALIBRATEF;               ;;;;;//force all key re-calibrate flag

    ;;;;;//-DEFINE OTHER BANK RAM
    #pragma norambank
    extern  unsigned char   KEY_REF[];              ;;;;;//key Reference data RAM
    extern  unsigned char   KEY_STATUS[];           ;;;;;//
    extern  unsigned char   BALANCE_CAP[];                  ;;;;;//RCC

    #endif

#endif

;;;;;//--------------------------------------------------------------------------
;;;;;//--------------------------------------------------------------------------
;;;;;/*
endif
;;;;;*/

;;;;;///* ---------------------------------------------------------------------- */
;;;;;///**
;;;;;//  * @}
;;;;;//  */
;;;;;///* ---------------------------------------------------------------------------------------------------------*/
;;;;;///**
;;;;;//  * @}
;;;;;//  */
;;;;;///* ==================================================================================================================================================*/

